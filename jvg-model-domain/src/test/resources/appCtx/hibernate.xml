<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		lazy-init="false">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties" ref="hibernateProperties" />
		<!-- Specify the packages to scan here -->
		<property name="packagesToScan" value="com.jvg" />


	</bean>

	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- Apply transactions to all methods on our DTO objects. -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRES_NEW" />
			<tx:method name="edit*" propagation="REQUIRES_NEW" />
			<tx:method name="update*" propagation="REQUIRES_NEW" />
			<tx:method name="add*" propagation="REQUIRES_NEW" />
			<tx:method name="delete*" propagation="REQUIRES_NEW" />
			<tx:method name="create*" propagation="REQUIRES_NEW" />
			<tx:method name="remove*" propagation="REQUIRES_NEW" />
			<tx:method name="reorder*" propagation="REQUIRES_NEW" />
			<tx:method name="change*" propagation="REQUIRES_NEW" />
			<tx:method name="batchUpdate" propagation="REQUIRES_NEW" />
			<!-- all other methods are read-only -->
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="genericDaoMethods"
			expression="execution(* com.googlecode.genericdao.dao.hibernate.GenericDAO.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="genericDaoMethods" />
	</aop:config>

	<bean name="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">

		<property name="properties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">create-drop</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				
				<prop key="hibernate.jdbc.batch_size">20</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
			</props>
		</property>
	</bean>

	<!-- <tx:advice id="txAdvice" transaction-manager="txManager"> <tx:attributes> 
		<tx:method name="find*" read-only="true" /> <tx:method name="*" /> </tx:attributes> 
		</tx:advice> -->

	<!-- <aop:config> <aop:pointcut id="userServicePointCut" expression="execution(* 
		com.stride.cartrek.model.dao.hibernate*.*.*(..))" /> <aop:advisor advice-ref="txAdvice" 
		pointcut-ref="userServicePointCut" /> </aop:config> -->


	<!-- <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager"> 
		<property name="sessionFactory" ref="sessionFactory" /> </bean> -->

</beans>		